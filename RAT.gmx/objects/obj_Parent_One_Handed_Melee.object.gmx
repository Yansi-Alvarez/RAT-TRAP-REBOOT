<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>obj_One_Handed_Melee_Weapon_In_Use = noone;

sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped = noone;

sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped = noone;

sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Pick_Up = noone;

sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Pick_Up = noone;

sprite_index_One_Handed_Melee_Weapon_Hud = noone;

//slash_animation = false;

text_One_Handed_Melee_Weapon = noone;
popup_width_One_Handed_Melee_Weapon = noone;
popup_padding_One_Handed_Melee_Weapon = noone;
draw_below_One_Handed_Melee_Weapon = noone;
font_One_Handed_Melee_Weapon = noone;
font_color_One_Handed_Melee_Weapon = noone; 
bak_color_One_Handed_Melee_Weapon = noone;

//////////////////////////////////////////////////////

One_Handed_Melee_Weapon_collision = false;

weapon_picked_up = false;

equipped = false;

equip_text_box = false;

reloaded_ammo = noone;

aud = noone;

floating_number = 0;

flip_float = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (flip_float == false) {

    floating_number += 1;
}

if (flip_float == true) {

    floating_number -= 1;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if ((global.weapon_attach_left_arm == true) and (global.weapon_attach_right_arm == false) and (weapon_picked_up == true)) {     

    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Idle_Down_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Idle_Down_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Idle_Up_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Idle_Up_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }

//////////////////////////////////////////////////////////////////
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Walking_Down_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Walking_Down_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Walking_Up_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Walking_Up_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
    
//////////////////////////////////////////////////////////////////

    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Stun_Down_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Stun_Down_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Stun_Up_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Stun_Up_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
}

//////////////////////////////////////////////////////////////////
//////////////////////////////////////////////////////////////////

//Gun Attachment Code for the right arm

if ((global.weapon_attach_right_arm == true) and (global.weapon_attach_left_arm == false) and (weapon_picked_up = true)) {
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Idle_Down_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Idle_Down_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Idle_Up_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Idle_Up_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    }

//////////////////////////////////////////////////////////////////
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Walking_Down_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Walking_Down_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Walking_Up_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Walking_Up_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    } 
    
//////////////////////////////////////////////////////////////////

    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Stun_Down_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Stun_Down_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Stun_Up_Left) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    }
    
    if (obj_Rat_Head.sprite_index = spr_Head_Standard_Stun_Up_Right) {
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    } 
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if  ((global.direction_player &gt;= 0) and (global.direction_player &lt;= 89)) and (obj_Rat_Head.walk_up_right == false) and (obj_Rat_Head.collision_with_enemy == false) {

    if (global.weapon_attach_left_arm == true) and (One_Handed_Melee_Weapon_collision == true) and (global.weapon_attach_right_arm == false) {
        
        obj_Rat_Body.depth = 2;
    }
    
    if (One_Handed_Melee_Weapon_collision == true) and (global.weapon_attach_right_arm == true) and (global.weapon_attach_left_arm == false) {
        
        obj_Rat_Body.depth = 0;
    }
}

if ((global.direction_player &gt;= 90) and (global.direction_player &lt;= 179)) and (obj_Rat_Head.walk_up_left == false) and (obj_Rat_Head.collision_with_enemy == false) {
    
    if (One_Handed_Melee_Weapon_collision == true) and (global.weapon_attach_left_arm == true) and (global.weapon_attach_right_arm == false) {
        
        obj_Rat_Body.depth = 0;
    }
    
    if (One_Handed_Melee_Weapon_collision == true) and (global.weapon_attach_right_arm == true) and (global.weapon_attach_left_arm == false) {
        
        //obj_Rat_Body.depth = 2;
        obj_Rat_Body.depth = 0;
    }
}

if ((global.direction_player &gt;= 180) and (global.direction_player &lt;= 269)) and (obj_Rat_Head.walk_down_left == false) and (obj_Rat_Head.collision_with_enemy == false) {
    
    if (One_Handed_Melee_Weapon_collision == true) and (global.weapon_attach_left_arm == true) and (global.weapon_attach_right_arm == false) {
        
        obj_Rat_Body.depth = 0;
    }
    
    if (One_Handed_Melee_Weapon_collision == true) and (global.weapon_attach_right_arm == true) and (global.weapon_attach_left_arm == false) {
        
        obj_Rat_Body.depth = 1;
    }
}

if ((global.direction_player &gt;= 270) and (global.direction_player &lt;= 359)) and (obj_Rat_Head.walk_down_right == false) and (obj_Rat_Head.collision_with_enemy == false) {
    
    if (One_Handed_Melee_Weapon_collision == true) and (global.weapon_attach_left_arm == true) and (global.weapon_attach_right_arm == false) {
        
        obj_Rat_Body.depth = 1;
    }
    
    if (One_Handed_Melee_Weapon_collision == true) and (global.weapon_attach_right_arm == true) and (global.weapon_attach_left_arm == false) {
        
        obj_Rat_Body.depth = 0;
    }
}

if ((sprite_index == sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Pick_Up) or (sprite_index == sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Pick_Up)) {

    if (flip_float == false) {
    
        y = y + floating_number;
        alarm[0] = 1;
        
        if (floating_number == 3) {

            flip_float = true;
        }
    }
    
    if (flip_float == true) {
        
        y = y - floating_number;
        alarm[0] = 1;
        
        if (floating_number == 0) {

            flip_float = false;
        }
    }
}

/*if (global.one_handed_melee_collision == true) {
    if mouse_check_button_pressed(mb_left) and ((global.weapon_attach_right_arm == true) or (global.weapon_attach_left_arm == true)) {
            
        object_slash = instance_create(x,y,obj_Slash);
        object_slash.image_angle = point_direction(x,y,mouse_x,mouse_y);      
        audio_play_sound(snd_Melee_Hit, 1, 0);
        //slash_animation = true;
        //object_bullet.direction = point_direction(obj_Rat_Head.x, obj_Rat_Head.y, mouse_x, mouse_y);
    }
}*/

////////////////////////////////////////////////////////////////////Weilding guns////////////////////////////////////////////////////////////////////

if ((equip_text_box == true) and ((sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Pick_Up) or (sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Pick_Up)) 
and ((global.weapon_attach_right_arm = false) and (global.weapon_attach_left_arm = false)) and (keyboard_check_pressed(ord('E')))) {
    
    if (//Walking Animation
        ((obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Down_Left) or (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Down_Left) or 
        (obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Down_Left))) {
        
        equip_text_box = false;
        
        obj_Rat_Body.weapon_equipped = obj_One_Handed_Melee_Weapon_In_Use;
        //Input new code for laser rifle so it uses the charge animation for the rest of it here
        
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.weapon_picked_up = true;
        obj_Rat_Body.weapon_equipped.One_Handed_Melee_Weapon_collision = true;
        obj_Rat_Body.weapon_equipped.equipped = true;
        global.weapon_attach_left_arm = true;
        obj_Rat_Body.weapon_equipped.persistent = true;
    }
    
    if (//Walking Animation
        ((obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Down_Right) or (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Down_Right) or 
        (obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Down_Right))) {       

        equip_text_box = false;
        
        obj_Rat_Body.weapon_equipped = obj_One_Handed_Melee_Weapon_In_Use;
        
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.weapon_picked_up = true;
        obj_Rat_Body.weapon_equipped.One_Handed_Melee_Weapon_collision = true;
        obj_Rat_Body.weapon_equipped.equipped = true;
        global.weapon_attach_right_arm = true;
        obj_Rat_Body.weapon_equipped.persistent = true;
    }
    
    if (//Walking Animation
        ((obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Up_Left) or (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Up_Left) or 
        (obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Up_Left))) {
        
        equip_text_box = false;
        
        obj_Rat_Body.weapon_equipped = obj_One_Handed_Melee_Weapon_In_Use;
        
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.weapon_picked_up = true;
        obj_Rat_Body.weapon_equipped.One_Handed_Melee_Weapon_collision = true;
        obj_Rat_Body.weapon_equipped.equipped = true;
        global.weapon_attach_left_arm = true;
        obj_Rat_Body.weapon_equipped.persistent = true;
    }
    
    if (//Walking Animation
        ((obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Up_Right) or (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Up_Right) or 
        (obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Up_Right))) {
        
        equip_text_box = false;
        
        obj_Rat_Body.weapon_equipped = obj_One_Handed_Melee_Weapon_In_Use;
        
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
    
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.weapon_picked_up = true;
        obj_Rat_Body.weapon_equipped.One_Handed_Melee_Weapon_collision = true;
        obj_Rat_Body.weapon_equipped.equipped = true;
        global.weapon_attach_right_arm = true;
        obj_Rat_Body.weapon_equipped.persistent = true;
    }
    
    floating = false;
}

////////////////////////////////////////////////////////////////////Weilding guns////////////////////////////////////////////////////////////////////
if ((equip_text_box == true) and ((sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Pick_Up) or (sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Pick_Up)) 
and ((global.weapon_attach_right_arm = true) or (global.weapon_attach_left_arm = true)) and (keyboard_check_pressed(ord('E')))) {
    
    if (//Walking Animation
        ((obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Down_Left) or (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Down_Left) or 
        (obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Down_Left))) {
        
        equip_text_box = false;
        
        obj_Rat_Body.weapon_dropped = obj_Rat_Body.weapon_equipped;
        obj_Rat_Body.weapon_dropped.sprite_index = obj_Rat_Body.weapon_dropped.sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Pick_Up;
        obj_Rat_Body.weapon_dropped.weapon_picked_up = false;
        obj_Rat_Body.weapon_dropped.One_Handed_Melee_Weapon_collision = false;
        obj_Rat_Body.weapon_dropped.equipped = false;
        obj_Rat_Body.weapon_dropped.x = obj_One_Handed_Melee_Weapon_In_Use.x;
        obj_Rat_Body.weapon_dropped.y = obj_One_Handed_Melee_Weapon_In_Use.y;
        obj_Rat_Body.weapon_dropped.persistent = false;
        
        obj_Rat_Body.weapon_equipped = obj_One_Handed_Melee_Weapon_In_Use;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.weapon_picked_up = true;
        obj_Rat_Body.weapon_equipped.One_Handed_Melee_Weapon_collision = true;
        obj_Rat_Body.weapon_equipped.equipped = true;
        global.weapon_attach_right_arm = false;
        global.weapon_attach_left_arm = true;
        obj_Rat_Body.weapon_equipped.persistent = true;
    }
    
    if (//Walking Animation
        ((obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Down_Right) or (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Down_Right) or 
        (obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Down_Right))) {
        
        equip_text_box = false;
        
        obj_Rat_Body.weapon_dropped = obj_Rat_Body.weapon_equipped;
        obj_Rat_Body.weapon_dropped.sprite_index = obj_Rat_Body.weapon_dropped.sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Pick_Up;
        obj_Rat_Body.weapon_dropped.weapon_picked_up = false;
        obj_Rat_Body.weapon_dropped.One_Handed_Melee_Weapon_collision = false;
        obj_Rat_Body.weapon_dropped.equipped = false;
        obj_Rat_Body.weapon_dropped.x = obj_One_Handed_Melee_Weapon_In_Use.x;
        obj_Rat_Body.weapon_dropped.y = obj_One_Handed_Melee_Weapon_In_Use.y;
        obj_Rat_Body.weapon_dropped.persistent = false;
        
        obj_Rat_Body.weapon_equipped = obj_One_Handed_Melee_Weapon_In_Use;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.weapon_picked_up = true;
        obj_Rat_Body.weapon_equipped.One_Handed_Melee_Weapon_collision = true;
        obj_Rat_Body.weapon_equipped.equipped = true;
        global.weapon_attach_right_arm = true;
        global.weapon_attach_left_arm = false;
        obj_Rat_Body.weapon_equipped.persistent = true;
    }
    
    if (//Walking Animation
        ((obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Up_Left) or (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Up_Left) or 
        (obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Up_Left))) {
        
        equip_text_box = false;
        
        obj_Rat_Body.weapon_dropped = obj_Rat_Body.weapon_equipped;
        obj_Rat_Body.weapon_dropped.sprite_index = obj_Rat_Body.weapon_dropped.sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Pick_Up;
        obj_Rat_Body.weapon_dropped.weapon_picked_up = false;
        obj_Rat_Body.weapon_dropped.One_Handed_Melee_Weapon_collision = false;
        obj_Rat_Body.weapon_dropped.equipped = false;
        obj_Rat_Body.weapon_dropped.x = obj_One_Handed_Melee_Weapon_In_Use.x;
        obj_Rat_Body.weapon_dropped.y = obj_One_Handed_Melee_Weapon_In_Use.y;
        obj_Rat_Body.weapon_dropped.persistent = false;
        
        obj_Rat_Body.weapon_equipped = obj_One_Handed_Melee_Weapon_In_Use;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Front_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Front_Arm.y;
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.weapon_picked_up = true;
        obj_Rat_Body.weapon_equipped.One_Handed_Melee_Weapon_collision = true;
        obj_Rat_Body.weapon_equipped.equipped = true;
        global.weapon_attach_right_arm = false;
        global.weapon_attach_left_arm = true;
        obj_Rat_Body.weapon_equipped.persistent = true;
    }
    
    if (//Walking Animation
        ((obj_Rat_Body.sprite_index = spr_Body_Standard_Walking_Up_Right) or (obj_Rat_Body.sprite_index = spr_Body_Standard_Stun_Up_Right) or 
        (obj_Rat_Body.sprite_index = spr_Body_Standard_Idle_Up_Right))) {
        
        equip_text_box = false;
        
        obj_Rat_Body.weapon_dropped = obj_Rat_Body.weapon_equipped;
        obj_Rat_Body.weapon_dropped.sprite_index = obj_Rat_Body.weapon_dropped.sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Pick_Up;
        obj_Rat_Body.weapon_dropped.weapon_picked_up = false;
        obj_Rat_Body.weapon_dropped.One_Handed_Melee_Weapon_collision = false;
        obj_Rat_Body.weapon_dropped.equipped = false;
        obj_Rat_Body.weapon_dropped.x = obj_One_Handed_Melee_Weapon_In_Use.x;
        obj_Rat_Body.weapon_dropped.y = obj_One_Handed_Melee_Weapon_In_Use.y;
        obj_Rat_Body.weapon_dropped.persistent = false;
        
        obj_Rat_Body.weapon_equipped = obj_One_Handed_Melee_Weapon_In_Use;
        obj_Rat_Body.weapon_equipped.x = obj_Rat_Back_Arm.x;
        obj_Rat_Body.weapon_equipped.y = obj_Rat_Back_Arm.y;
        obj_Rat_Body.weapon_equipped.sprite_index = sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped;
        obj_Rat_Body.weapon_equipped.weapon_picked_up = true;
        obj_Rat_Body.weapon_equipped.One_Handed_Melee_Weapon_collision = true;
        obj_Rat_Body.weapon_equipped.equipped = true;
        global.weapon_attach_right_arm = true;
        global.weapon_attach_left_arm = false;
        obj_Rat_Body.weapon_equipped.persistent = true;
    }
    
    floating = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//Draw Event for obj_Parent_Gun

draw_self();

if (!place_meeting(x, y, obj_Rat_Body)) { //and (weapon_picked_up == false) and (equipped = false)) {

    equip_text_box = false; 
}

if (place_meeting(x, y, obj_Rat_Body) and (obj_One_Handed_Melee_Weapon_In_Use.weapon_picked_up == false) and (obj_One_Handed_Melee_Weapon_In_Use.equipped = false)) {

    draw_set_font(font_One_Handed_Melee_Weapon);
    draw_set_color(font_color_One_Handed_Melee_Weapon);    
    
    scr_draw_messagebox(text_One_Handed_Melee_Weapon, popup_width_One_Handed_Melee_Weapon, popup_padding_One_Handed_Melee_Weapon, self, bak_color_One_Handed_Melee_Weapon, draw_below_One_Handed_Melee_Weapon);
    equip_text_box = true;
}


if ((global.weapon_attach_left_arm == true) or (global.weapon_attach_right_arm = true)) {
    
    draw_set_font(Game_Font);
    //draw_set_halign(fa_center);
    //draw_set_valign(fa_middle);
    /*
    if (obj_Rat_Body.weapon_equipped.ammo &gt;= 10) {
        draw_text_colour((view_xview[0] + 500), (view_yview[0] + 10), ( string(obj_Rat_Body.weapon_equipped.ammo) + "\" ), c_lime, c_lime, c_lime, c_lime, 1);
        draw_text_colour((view_xview[0] + 525), (view_yview[0] + 10), string(obj_Rat_Body.weapon_equipped.ammo_reserve), c_lime, c_lime, c_lime, c_lime, 1);
        }
        
    if (obj_Rat_Body.weapon_equipped.ammo &lt;= 9) {
        draw_text_colour((view_xview[0] + 505), (view_yview[0] + 10), ( string(obj_Rat_Body.weapon_equipped.ammo) + "\" ), c_lime, c_lime, c_lime, c_lime, 1);
        draw_text_colour((view_xview[0] + 525), (view_yview[0] + 10), string(obj_Rat_Body.weapon_equipped.ammo_reserve), c_lime, c_lime, c_lime, c_lime, 1);
        }
    */
    if ((sprite_index == sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Equipped) or (sprite_index == sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Equipped)) {
        
        draw_sprite(sprite_index_One_Handed_Melee_Weapon_Hud, 0, (view_xview[0] + 515),(view_yview[0] + 35));
        draw_sprite(spr_Ammo_Bracket_Left, 0, (view_xview[0] + 515) - 35, (view_yview[0] + 27));
        draw_sprite(spr_Ammo_Bracket_Right, 0, (view_xview[0] + 515) + 35,(view_yview[0] + 27));

    }
}

if ((sprite_index == sprite_index_Left_One_Handed_Melee_Weapon_In_Use_Pick_Up) or (sprite_index == sprite_index_Right_One_Handed_Melee_Weapon_In_Use_Pick_Up)) {

    depth = y * -1;
    draw_sprite_ext(sprite_index, image_index, x, y + sprite_height, image_xscale, image_yscale, image_angle, c_black, 0.25);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
